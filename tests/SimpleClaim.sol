// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import {SimpleClaim} from "../contracts/SimpleClaim.sol";
import {BaseTest} from "./base/BaseTest.t.sol";

contract SimpleClaimTest is BaseTest {
  bytes16 public constant APP_ID = 0x112a692a2005259c25f6094161007967;
  bytes16 public constant GROUP_ID = 0xe9ed316946d3d98dfcd829a53ec9822e;

  SimpleClaim public simpleClaim;

  function setUp() public {
    simpleClaim = new SimpleClaim(APP_ID, GROUP_ID);
  }

  function test_SimpleClaim() public {
    assertEq(simpleClaim.counter(), 0);

    // group membership of GROUP_ID
    // signature of uint256 3
    bytes
      memory response = hex"0000000000000000000000000000000000000000000000000000000000000020112a692a2005259c25f609416100796700000000000000000000000000000000b8e2054f8a912367e38a22ce773328ff000000000000000000000000000000007369736d6f2d636f6e6e6563742d76310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c068796472612d73322e310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000e9ed316946d3d98dfcd829a53ec9822e000000000000000000000000000000006c617465737400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c00d20fde33ef7fac1b00b4bcf2b28c54857f06bcb458ed2cb87a1ec4fb8210fbf0a2474033b5f17ecc6576b001f73479ce311f76560970e7d599b7e976cdb466823b00332863dd898b8a023ef9d0c6aeea83d7229519f441fa16aab032566c074256185155972b65b10ded4e6b42d5bcc86ee9e5d7de1f09bdeae154c9364e9f718b6deb7ee854430b3e5ca3aa280a1ba93ad23f1a9450d3c0753e7f736899aac1adcab147fa502be4f6f6e385cd0a8b669b1000a17c655c1fe34d054d798c3c824e9a7684782c9246905187f960be1a51f45ef48c966f5b0d14345be6d6326552ee7bab93cfe19ec51861529fd69c1ef710b00901008117981380e58bedcd089000000000000000000000000000000000000000000000000000000000000000000c620431992bb5a1818e1ef290d79b3c8f39838541f408b4e9d3ff4af71f8572ab71fb864979b71106135acfa84afc1d756cda74f8f258896f896b4864f025630423b4c502f1cd4179a425723bf1e15c843733af2ecdee9aef6a0451ef2db741747819efd5874bbd3fbe5b752aa2289f5fd40a5471928df07e35aab71f3d5ce21a63725868405196971cad8f2e46ed111118a9869929d0f87c154c9c60d015f124bd705fd7680828b9d00982d08a5baef8249ad2e0dbcce3597a9afb1ad0cb90000000000000000000000000000000000000000000000000000000000000001285bf79dc20d58e71b9712cb38c420b9cb91d3438c8e3dbaf07829b03ffffffc00000000000000000000000000000000000000000000000000000000000000002d495b4c6618a926b0a741ad2e1ff25ace5558f09c853bac3aa5306aba598bd30a13966ba7f5bb9e347b50a2b7fa12a296b75b5e901fdee64c14cc69b5645bc2000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    simpleClaim.incrementWithSismoConnect(response, 3);
    assertEq(simpleClaim.counter(), 3);
  }
}
