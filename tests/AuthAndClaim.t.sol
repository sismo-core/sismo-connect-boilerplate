// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import {AuthAndClaim} from "../contracts/AuthAndClaim.sol";
import {BaseTest} from "./base/BaseTest.t.sol";

contract AuthAndClaimTest is BaseTest {
  bytes16 public constant APP_ID = 0x112a692a2005259c25f6094161007967;
  bytes16 public constant GROUP_ID = 0xe9ed316946d3d98dfcd829a53ec9822e;

  AuthAndClaim public authAndClaim;

  function setUp() public {
    authAndClaim = new AuthAndClaim(APP_ID, GROUP_ID);
  }

  function test_AuthAndClaim() public {
    assertEq(authAndClaim.counter(), 0);

    // Data Vault ownership
    // group membership of GROUP_ID
    // signature of uint256 3
    bytes
      memory response = hex"0000000000000000000000000000000000000000000000000000000000000020112a692a2005259c25f609416100796700000000000000000000000000000000b8e2054f8a912367e38a22ce773328ff000000000000000000000000000000007369736d6f2d636f6e6e6563742d76310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c068796472612d73322e310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000e9ed316946d3d98dfcd829a53ec9822e000000000000000000000000000000006c617465737400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c01a572c1765f2e47e5070013406a421f0a06f7ade48909fc19480bef13240fc8909b00967b5587cd41374ff62f80e036ae432285bc33928797ee84e906c8f449220610e125a1f14eb48c960fa30d6ddcf166ad87d75f355b279133d8beaf01b5c26109b3f799d8dc5eb60b9697da358925e64243b3d6fe222bad739068ef88dbd1de72d4f9c68110a6894330b1b13e5c0bd16316c14515424169a0b9bc26f44542a70b11f56dc476fe88fea51e0af0438fd15c6061d7830ea8ad664a96d2a07f30767bbe3ede5069c9211a891364355a5ad5fa73886a1e17eec6bf1c4a0501c9b00f435867c450b854565314c88ade17b302a6c35e8ce36e33273a7fcf4c33fb2000000000000000000000000000000000000000000000000000000000000000000c620431992bb5a1818e1ef290d79b3c8f39838541f408b4e9d3ff4af71f8572ab71fb864979b71106135acfa84afc1d756cda74f8f258896f896b4864f025630423b4c502f1cd4179a425723bf1e15c843733af2ecdee9aef6a0451ef2db741747819efd5874bbd3fbe5b752aa2289f5fd40a5471928df07e35aab71f3d5ce21a63725868405196971cad8f2e46ed111118a9869929d0f87c154c9c60d015f124bd705fd7680828b9d00982d08a5baef8249ad2e0dbcce3597a9afb1ad0cb90000000000000000000000000000000000000000000000000000000000000001285bf79dc20d58e71b9712cb38c420b9cb91d3438c8e3dbaf07829b03ffffffc00000000000000000000000000000000000000000000000000000000000000002d495b4c6618a926b0a741ad2e1ff25ace5558f09c853bac3aa5306aba598bd30a13966ba7f5bb9e347b50a2b7fa12a296b75b5e901fdee64c14cc69b5645bc200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001a068796472612d73322e310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012d495b4c6618a926b0a741ad2e1ff25ace5558f09c853bac3aa5306aba598bd300000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c00088b1140ad58c381dd29018cc50af59d704af17d4b489348d92123e03fdc01c271764d88f7dc3cc9c98310f8f846c5410ab9e916a7210f0f4caf9ce25c82ec803448e7c3e1af706faac307ac8262464d435daaf5c49892248ba0be2874c223523e8939732f8cf08646c7e8f50e6f522266728692da71d15c4ade2495794cf941a0e2fd4e6f976c9c7c63eef1c1f3e31167e19094caabba7cdc5aaac6548a6ea038279e26ad2db0cc67d52ac5ebda63b24bc6187b7c63cbee4116a31e2543e703048ad7bfa99e8fe214c397dcc4cd98a6eb1da01bfe25b8885dcf20c0faf947f02d10584a984e3f83ed3ab8cd6c05dc31734339529ad10f628379f912f22b126000000000000000000000000000000000000000000000000000000000000000000c620431992bb5a1818e1ef290d79b3c8f39838541f408b4e9d3ff4af71f8572ab71fb864979b71106135acfa84afc1d756cda74f8f258896f896b4864f025630423b4c502f1cd4179a425723bf1e15c843733af2ecdee9aef6a0451ef2db740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002d495b4c6618a926b0a741ad2e1ff25ace5558f09c853bac3aa5306aba598bd30a13966ba7f5bb9e347b50a2b7fa12a296b75b5e901fdee64c14cc69b5645bc2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    authAndClaim.incrementWithSismoConnect(response, 3);
    assertEq(authAndClaim.counter(), 3);
  }
}
