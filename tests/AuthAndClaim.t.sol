// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import {AuthAndClaim} from "../contracts/AuthAndClaim.sol";
import {BaseTest} from "./base/BaseTest.t.sol";

contract AuthAndClaimTest is BaseTest {
  bytes16 public constant APP_ID = 0x112a692a2005259c25f6094161007967;
  bytes16 public constant GROUP_ID = 0xe9ed316946d3d98dfcd829a53ec9822e;

  AuthAndClaim public authAndClaim;

  function setUp() public {
    // register the correct root in the dev staging registry tree
    _registerTreeRoot(8127481972001971140750938642089484964336940695632132593880909302134648926075);

    authAndClaim = new AuthAndClaim(APP_ID, GROUP_ID);
  }

  function test_AuthAndClaim() public {
    assertEq(authAndClaim.counter(), 0);

    // Data Vault ownership
    // group membership of GROUP_ID
    // signature of uint256 3
    bytes
      memory response = hex"0000000000000000000000000000000000000000000000000000000000000020112a692a2005259c25f609416100796700000000000000000000000000000000b8e2054f8a912367e38a22ce773328ff000000000000000000000000000000007369736d6f2d636f6e6e6563742d76310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c068796472612d73322e310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000e9ed316946d3d98dfcd829a53ec9822e000000000000000000000000000000006c617465737400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c02022fcdc75dda933da1204733295e99e0d8b0d906a17366e930475a786e12ef800f11b90b936a98cf64c4b83adc41187e22afa19d4dc106ab13630a27b706d122082d06fd6bab43f29fd8ef5f79d71d455b22551436bd95cb70a17846f45268a0e8bb5994ac6658277fc4395f95b89c68e5b5d5c761b11c744646a1bdc2486e812a4769b5d311a51f9e857cad1839b307536cdf4e35763716d909c8fd9f8647f0d0005f2047ac85e32cc9b2cbc040f5f10ebfd0d14c13e435baaac378f4fde9e1d75096def29e4403d05413d3f78574b6d29af72dedc63a342f4b426db7eb34802e1d4608ea152bb25cf101a3f68577680e1f26fb8a738f42a87757b24bd01b2000000000000000000000000000000000000000000000000000000000000000000c620431992bb5a1818e1ef290d79b3c8f39838541f408b4e9d3ff4af71f8572ab71fb864979b71106135acfa84afc1d756cda74f8f258896f896b4864f025630423b4c502f1cd4179a425723bf1e15c843733af2ecdee9aef6a0451ef2db7411f7fde533960ea368ab0af29e6690687bb97ff54af42f77a071adf0e5a0ef7b21a63725868405196971cad8f2e46ed111118a9869929d0f87c154c9c60d015f124bd705fd7680828b9d00982d08a5baef8249ad2e0dbcce3597a9afb1ad0cb90000000000000000000000000000000000000000000000000000000000000001285bf79dc20d58e71b9712cb38c420b9cb91d3438c8e3dbaf07829b03ffffffc00000000000000000000000000000000000000000000000000000000000000002d495b4c6618a926b0a741ad2e1ff25ace5558f09c853bac3aa5306aba598bd30a13966ba7f5bb9e347b50a2b7fa12a296b75b5e901fdee64c14cc69b5645bc200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001a068796472612d73322e310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012d495b4c6618a926b0a741ad2e1ff25ace5558f09c853bac3aa5306aba598bd300000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c02edda555067a14a7363695e12b84d222826a246ec75a08a698007ae88f2e5806286fa3e209051a69932398259005b9d43d66d8702911382155f113b034d339541dd252e9afd9a0160088fd0784d994617a74edc3951cec954771a8671d3712971309123d5f1a6eea95829757bd3624f22033c86e44ebc00ab35ddf4db5393b2f0d0c15dfeeaf8ba7c3c7c6c05bdaab70a781b943ed91d1259378703dcb18c140249b9cffeef47e9d1b8342e63bb671308d4642bba285d90b27f64992b6a2def40e41f8e9f3e530ea949d174d30b9daf9a55923d31b990ddc8094aa76e78f6e52137e41d9244c9af05132d9f1cc7541675a06ed2a40ca9d13e903688a65182a57000000000000000000000000000000000000000000000000000000000000000000c620431992bb5a1818e1ef290d79b3c8f39838541f408b4e9d3ff4af71f8572ab71fb864979b71106135acfa84afc1d756cda74f8f258896f896b4864f025630423b4c502f1cd4179a425723bf1e15c843733af2ecdee9aef6a0451ef2db740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002d495b4c6618a926b0a741ad2e1ff25ace5558f09c853bac3aa5306aba598bd30a13966ba7f5bb9e347b50a2b7fa12a296b75b5e901fdee64c14cc69b5645bc2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    authAndClaim.incrementWithSismoConnect(response, 3);
    assertEq(authAndClaim.counter(), 3);
  }
}
